<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.ericsson.cifwk</groupId>
        <artifactId>tr-application</artifactId>
        <version>1.0.29-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>tr-backend</artifactId>
    <packaging>war</packaging>

    <properties>
        <morphia.version>0.108</morphia.version>
        <jetty.version>9.1.3.v20140225</jetty.version>
        <slf4j.version>1.7.10</slf4j.version>
        <maven.core>3.2.1</maven.core>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <webResources>
                        <resource>
                            <directory>../client/target/deployFolder</directory>
                            <targetPath>./</targetPath>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.sharethis</groupId>
                <artifactId>mongomigration</artifactId>
                <version>1.0.0</version>
                <configuration>
                    <args>
                        <arg>./src/main/resources/mongo/mongo.properties</arg>
                        <arg>./src/main/resources/mongo/migrationSet.mongo</arg>
                    </args>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>com.ericsson.cifwk</groupId>
            <artifactId>tr-model</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- forcing client build before backend -->
        <dependency>
            <groupId>com.ericsson.cifwk</groupId>
            <artifactId>tr-client</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>4.0-beta5</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>18.0</version>
        </dependency>
        <dependency>
            <groupId>com.sparkjava</groupId>
            <artifactId>spark-core</artifactId>
            <version>2.0.0</version>
            <exclusions>
                <exclusion>
                    <groupId>org.eclipse.jetty</groupId>
                    <artifactId>jetty-server</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.eclipse.jetty</groupId>
                    <artifactId>jetty-webapp</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.2</version>
        </dependency>
        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongo-java-driver</artifactId>
            <version>2.12.4</version>
        </dependency>
        <dependency>
            <groupId>org.mongodb.morphia</groupId>
            <artifactId>morphia</artifactId>
            <version>${morphia.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mongodb.morphia</groupId>
            <artifactId>morphia-validation</artifactId>
            <version>${morphia.version}</version>
            <exclusions>
                <!-- already included in hibernate-validation -->
                <exclusion>
                    <groupId>javax.validation</groupId>
                    <artifactId>validation-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>5.0.1.Final</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.1.1</version>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>${jetty.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-webapp</artifactId>
            <version>${jetty.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.fakemongo</groupId>
            <artifactId>fongo</artifactId>
            <version>1.5.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>1.10.8</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.restassured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>2.3.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>2.2.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>fluent-hc</artifactId>
            <version>4.4</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.3.2</version>
        </dependency>
        <dependency>
            <groupId>com.ericsson.cifwk</groupId>
            <artifactId>tr-scanner</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-core</artifactId>
            <version>${maven.core}</version>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>deploy-env</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>wagon-maven-plugin</artifactId>
                        <version>1.0-beta-5</version>
                        <dependencies>
                            <dependency>
                                <groupId>org.apache.maven.wagon</groupId>
                                <artifactId>wagon-ssh</artifactId>
                                <version>2.3</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>upload-single</goal>
                                    <!--<goal>sshexec</goal>-->
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <serverId>${server.id}</serverId>
                            <url>${upload.cmd}</url>
                            <fromFile>${project.build.directory}/${project.artifactId}-${project.version}.${project.packaging}</fromFile>
                            <toFile>${webapp.dir}/${project.artifactId}.${project.packaging}</toFile>
                            <!--<failOnError>false</failOnError>
                            <commands>
                                <command>${tomcat.cmd} stop</command>
                                <command>sleep 30</command>
                                <command>rm -rf ${webapp.dir}/${project.artifactId}</command>
                                <command>mv -f /tmp/${project.artifactId}.${project.packaging} ${webapp.dir}/</command>
                                <command>${tomcat.cmd} start</command>
                            </commands>-->
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
